openapi: 3.0.0
paths:
  /processes/:
    get:
      summary: Get available processes
      description: "Returns the list of available for the\ngiven ServiceId\n"
      tags:
      - processes
      responses:
        '200':
          description: "Returns the list of process summaries\n"
          content:
            application/json:
              schema:
                $ref: '#/definitions/ProcessList'
  /processes: {}
  /processes/{Ident}:
    get:
      summary: Get process description
      description: "Return the process description for\nthe given service and  process
        identifier\n"
      parameters:
      - in: path
        name: Ident
        schema:
          type: string
        required: true
        description: process identifier
      tags:
      - processes
      responses:
        '200':
          description: "Returns the process description\n"
          content:
            application/json:
              schema:
                $ref: '#/definitions/ProcessDescription'
  /processes/{Ident}/execution:
    post:
      summary: Execute process
      description: "Execute the process and returns the job status\n"
      parameters:
      - in: path
        name: Ident
        schema:
          type: string
        required: true
        description: Process  identifier
      tags:
      - processes
      requestBody:
        required: true
        description: "An execution request specifying any inputs for the process to
          execute,\nand optionally to select specific outputs."
        content:
          application/json:
            schema:
              $ref: '#/definitions/JobExecute'
      responses:
        '201':
          description: "Process accepted\n"
          content:
            application/json:
              schema:
                $ref: '#/definitions/JobStatus'
  /jobs/:
    get:
      summary: Get Job list
      description: "Returns the list job's status\n"
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
          minimum: 1
          maximum: 1000
          default: 10
        required: false
        description: Number of element returned
      - in: query
        name: page
        schema:
          type: integer
          minimum: 0
          default: 0
        required: false
        description: Start page index
      - in: query
        name: status
        required: false
        schema:
          type: arary
          items:
            type: string
      - in: query
        name: processID
        required: false
        schema:
          type: array
          items:
            type: string
      tags:
      - jobs
      responses:
        '200':
          description: "Job status list\n"
          content:
            application/json:
              schema:
                $ref: '#/definitions/JobList'
        '404':
          description: Jobs not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/ErrorResponse'
  /jobs: {}
  /jobs/{JobId}:
    get:
      summary: Get Job status
      description: "Returns the job status\n"
      parameters:
      - in: path
        name: JobId
        schema:
          type: string
        required: true
        description: Job id
      tags:
      - jobs
      responses:
        '200':
          description: "Job status\n"
          content:
            application/json:
              schema:
                $ref: '#/definitions/JobStatus'
        '404':
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/ErrorResponse'
    delete:
      summary: cancel a job execution, remove a finished job
      description: "Cancel a job execution and remove it from the jobs list.\n"
      parameters:
      - in: path
        name: JobId
        schema:
          type: string
        required: true
        description: Job id
      tags:
      - jobs
      responses:
        '200':
          description: "Job status\n"
          content:
            application/json:
              schema:
                $ref: '#/definitions/JobStatus'
        '404':
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/ErrorResponse'
  /jobs/{JobId}/results:
    get:
      summary: retrieve the result(s) of a job
      description: "List available results\n"
      parameters:
      - in: path
        name: JobId
        schema:
          type: string
        required: true
        description: Job id
      tags:
      - jobs
      responses:
        '200':
          description: "Job status\n"
          content:
            application/json:
              schema:
                $ref: '#/definitions/JobResults'
        '404':
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/definitions/ErrorResponse'
  /services/:
    get:
      summary: Return availables services
      description: "Returns a list of available services.\n"
      tags:
      - services
      responses:
        '200':
          description: "Returns the list of available services\n"
          content:
            application/json:
              schema:
                $ref: '#definitions/ServicesResponse'
definitions:
  JsonValue: {}
  ErrorResponse:
    properties:
      message:
        type: string
      details:
        anyOf:
        - $ref: '#/definitions/JsonValue'
        - type: 'null'
        default:
    required:
    - message
    title: ErrorResponse
    type: object
  Output:
    properties:
      format:
        $ref: '#/definitions/OutputFormat'
    required:
    - format
    type: object
  OutputFormat:
    properties:
      mediaType:
        type: string
      encoding:
        type: string
      schema:
        format: uri
        minLength: 1
        type: string
    required:
    - mediaType
    type: object
  JobExecute:
    properties:
      inputs:
        additionalProperties:
          $ref: '#/definitions/JsonValue'
        default: {}
        type: object
      outputs:
        additionalProperties:
          $ref: '#/definitions/Output'
        default: {}
        type: object
    title: JobExecute
    type: object
  JobException:
    properties:
      type:
        type: string
      title:
        anyOf:
        - type: string
        - type: 'null'
        default:
      status:
        anyOf:
        - type: integer
        - type: 'null'
        default:
      detail:
        anyOf:
        - type: string
        - type: 'null'
        default:
      instance:
        anyOf:
        - type: string
        - type: 'null'
        default:
    required:
    - type
    type: object
  LinkHttp:
    properties:
      rel:
        type: string
      mimeType:
        type: string
      title:
        default: ''
        type: string
      description:
        type: string
      length:
        type: integer
      templated:
        default: false
        type: boolean
      hreflang:
        type: string
      href:
        format: uri
        minLength: 1
        type: string
    required:
    - href
    type: object
  JobStatus:
    description: "Conform to OGC api\n\nSee /openapi/schemas/processes-core/statusInfo.yaml"
    properties:
      jobId:
        title: Job ID
        type: string
      processId:
        anyOf:
        - type: string
        - type: 'null'
        default:
        title: Process ID
      type:
        const: process
        default: process
        enum:
        - process
        title: Job type
        type: string
      status:
        enum:
        - pending
        - accepted
        - running
        - successful
        - failed
        - dismissed
        type: string
      message:
        anyOf:
        - type: string
        - type: 'null'
        default:
      created:
        format: date-time
        type: string
      started:
        anyOf:
        - format: date-time
          type: string
        - type: 'null'
        default:
      finished:
        anyOf:
        - format: date-time
          type: string
        - type: 'null'
        default:
      updated:
        anyOf:
        - format: date-time
          type: string
        - type: 'null'
        default:
      progress:
        anyOf:
        - maximum: 100
          minimum: 0
          type: integer
        - type: 'null'
        default:
      exception:
        anyOf:
        - $ref: '#/definitions/JobException'
        - type: 'null'
        default:
      links:
        default: []
        items:
          $ref: '#/definitions/LinkHttp'
        type: array
    required:
    - jobId
    - status
    - created
    type: object
  InputDescription:
    properties:
      title:
        default: ''
        type: string
      description:
        type: string
      keywords:
        default: []
        items:
          type: string
        type: array
      metadata:
        default: []
        items:
          anyOf:
          - $ref: '#/definitions/MetadataLink'
          - $ref: '#/definitions/MetadataValue'
        type: array
      schema:
        $ref: '#/definitions/JsonValue'
      valuePassing:
        default:
        - byValue
        items:
          enum:
          - byValue
          - byReference
          type: string
        type: array
      minOccurs:
        default: 1
        minimum: 0
        type: integer
      maxOccurs:
        anyOf:
        - exclusiveMinimum: 0
          type: integer
        - const: unbounded
          enum:
          - unbounded
          type: string
        default: 1
    required:
    - schema
    type: object
  MetadataLink:
    properties:
      rel:
        type: string
      mimeType:
        type: string
      title:
        default: ''
        type: string
      description:
        type: string
      length:
        type: integer
      templated:
        default: false
        type: boolean
      hreflang:
        type: string
      href:
        format: uri-reference
        type: string
      role:
        type: string
    required:
    - href
    type: object
  MetadataValue:
    properties:
      role:
        type: string
      title:
        type: string
      lang:
        type: string
      value:
        anyOf:
        - $ref: '#/definitions/JsonValue'
        - type: 'null'
    required:
    - value
    type: object
  OutputDescription:
    properties:
      title:
        default: ''
        type: string
      description:
        type: string
      keywords:
        default: []
        items:
          type: string
        type: array
      metadata:
        default: []
        items:
          anyOf:
          - $ref: '#/definitions/MetadataLink'
          - $ref: '#/definitions/MetadataValue'
        type: array
      schema:
        $ref: '#/definitions/JsonValue'
      valuePassing:
        default:
        - byValue
        items:
          enum:
          - byValue
          - byReference
          type: string
        type: array
    required:
    - schema
    type: object
  ProcessDescription:
    properties:
      title:
        default: ''
        type: string
      description:
        type: string
      keywords:
        default: []
        items:
          type: string
        type: array
      metadata:
        default: []
        items:
          anyOf:
          - $ref: '#/definitions/MetadataLink'
          - $ref: '#/definitions/MetadataValue'
        type: array
      id:
        title: Process id
        type: string
      version:
        type: string
      jobControlOptions:
        default:
        - sync-execute
        - async-execute
        - dismiss
        items:
          enum:
          - sync-execute
          - async-execute
          - dismiss
          type: string
        type: array
      links:
        default: []
        items:
          $ref: '#/definitions/LinkHttp'
        type: array
      inputs:
        additionalProperties:
          $ref: '#/definitions/InputDescription'
        default: {}
        type: object
      outputs:
        additionalProperties:
          $ref: '#/definitions/OutputDescription'
        default: {}
        type: object
    required:
    - id
    - version
    title: ProcessDescription
    type: object
  JobResults:
    additionalProperties:
      $ref: '#/definitions/JsonValue'
    type: object
  ServiceItem:
    properties:
      name:
        type: string
      title:
        default: ''
        type: string
      description:
        default: ''
        type: string
      qgisVersionInfo:
        type: integer
      versionDetails:
        type: string
      links:
        items:
          $ref: '#/definitions/LinkHttp'
        type: array
    required:
    - name
    - qgisVersionInfo
    - versionDetails
    - links
    type: object
  ServicesResponse:
    properties:
      services:
        items:
          $ref: '#/definitions/ServiceItem'
        type: array
    required:
    - services
    title: ServicesResponse
    type: object
  ProcessSummary:
    properties:
      title:
        default: ''
        type: string
      description:
        type: string
      keywords:
        default: []
        items:
          type: string
        type: array
      metadata:
        default: []
        items:
          anyOf:
          - $ref: '#/definitions/MetadataLink'
          - $ref: '#/definitions/MetadataValue'
        type: array
      id:
        title: Process id
        type: string
      version:
        type: string
      jobControlOptions:
        default:
        - sync-execute
        - async-execute
        - dismiss
        items:
          enum:
          - sync-execute
          - async-execute
          - dismiss
          type: string
        type: array
      links:
        default: []
        items:
          $ref: '#/definitions/LinkHttp'
        type: array
    required:
    - id
    - version
    type: object
  ProcessList:
    properties:
      processes:
        items:
          $ref: '#/definitions/ProcessSummary'
        type: array
      links:
        items:
          $ref: '#/definitions/LinkHttp'
        type: array
    required:
    - processes
    - links
    title: ProcessList
    type: object
  JobList:
    properties:
      jobs:
        items:
          $ref: '#/definitions/JobStatus'
        type: array
      links:
        items:
          $ref: '#/definitions/LinkHttp'
        type: array
    required:
    - jobs
    - links
    title: JobList
    type: object
tags:
- description: Processes
  name: processes
- description: Jobs
  name: jobs
- description: Services
  name: services
info:
  title: Py-Qgis-Processes
  description: Publish Qgis processing algorithms as OGC api processes
  version: v1
